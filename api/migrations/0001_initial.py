# Generated by Django 3.2.11 on 2022-11-09 21:23

import api.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=api.models.generate_unique_code, max_length=8, unique=True)),
                ('host', models.CharField(max_length=50, unique=True)),
                ('guest_can_pause', models.BooleanField(default=False)),
                ('votes_to_skip', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=50)),
                ('sentence', models.CharField(max_length=200)),
                ('content', models.CharField(max_length=500)),
                ('neg', models.DecimalField(decimal_places=2, max_digits=5)),
                ('neu', models.DecimalField(decimal_places=2, max_digits=5)),
                ('pos', models.DecimalField(decimal_places=2, max_digits=5)),
                ('stance', models.CharField(max_length=10, null=True)),
                ('similarity', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='TopicWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('weight', models.DecimalField(decimal_places=8, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='TweetCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim', models.CharField(max_length=300)),
                ('count', models.PositiveIntegerField()),
                ('time', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Twitter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500)),
                ('location', models.CharField(max_length=50)),
                ('longitude', models.DecimalField(decimal_places=2, max_digits=5)),
                ('latitude', models.DecimalField(decimal_places=2, max_digits=5)),
                ('time', models.CharField(max_length=50)),
                ('tweet_id', models.CharField(max_length=50)),
                ('source_tweet_id', models.CharField(max_length=50)),
                ('spread_type', models.CharField(max_length=50)),
                ('retweet_count', models.PositiveIntegerField()),
                ('comment_count', models.PositiveIntegerField()),
                ('claim', models.CharField(max_length=300)),
                ('category', models.PositiveIntegerField()),
                ('stance', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('count', models.PositiveIntegerField()),
                ('claim', models.CharField(max_length=300)),
                ('stance', models.PositiveIntegerField()),
            ],
            options={
                'unique_together': {('word', 'claim', 'stance')},
            },
        ),
        migrations.CreateModel(
            name='TweetSpread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direct_spread', models.PositiveIntegerField()),
                ('total_spread', models.PositiveIntegerField()),
                ('support', models.PositiveIntegerField()),
                ('neutral', models.PositiveIntegerField()),
                ('refute', models.PositiveIntegerField()),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.twitter')),
            ],
        ),
        migrations.CreateModel(
            name='TweetMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(max_length=50)),
                ('tweet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.twitter')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claim', models.CharField(max_length=300)),
                ('x', models.DecimalField(decimal_places=2, max_digits=5)),
                ('y', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weight', models.DecimalField(decimal_places=8, max_digits=10)),
                ('text', models.CharField(max_length=500)),
                ('topicwords', models.ManyToManyField(related_name='topicwords', to='api.TopicWords')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=50)),
                ('query', models.CharField(max_length=300, null=True)),
                ('veracity', models.BooleanField(null=True)),
                ('veracity_confidence', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('sentence_list', models.CharField(max_length=5000, null=True)),
                ('sent_stance_list', models.CharField(max_length=300, null=True)),
                ('sent_similarity_list', models.CharField(max_length=300, null=True)),
                ('datatype', models.CharField(max_length=10, null=True)),
                ('title', models.CharField(max_length=100, null=True)),
                ('docscore', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('content', models.CharField(max_length=1000, null=True)),
                ('neg', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('neu', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('pos', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('stance', models.CharField(max_length=10, null=True)),
                ('url', models.CharField(max_length=100, null=True)),
                ('source', models.CharField(max_length=20, null=True)),
                ('sentence', models.ManyToManyField(related_name='documents', to='api.Sentence')),
            ],
        ),
        migrations.CreateModel(
            name='TweetGraph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(max_length=50)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source', to='api.twitter')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target', to='api.twitter')),
            ],
            options={
                'unique_together': {('source', 'target')},
            },
        ),
    ]
